From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ColinBashful <76665243+ColinBashful@users.noreply.github.com>
Date: Mon, 16 Jun 2025 17:07:05 +0200
Subject: [PATCH] Allow changing craft recipe remainders


diff --git a/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 9041830c19e2899479e1519488faba5c416ccd88..73ccbca51693052d665c5dae8e8e9630198a6a3d 100644
--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -3200,6 +3200,10 @@ public class ServerGamePacketListenerImpl
                         switch (event.getResult()) {
                             case ALLOW:
                             case DEFAULT:
+                                // Paper start - Set keep ingredients
+                                if (event instanceof CraftItemEvent)
+                                    net.minecraft.world.inventory.ResultSlot.craftRemainders = ((org.bukkit.event.inventory.CraftItemEvent) event).getCraftRemainders();
+                                // Paper end - Set keep ingredients
                                 this.player.containerMenu.clicked(slotNum, packet.buttonNum(), packet.clickType(), this.player);
                                 break;
                             case DENY:
diff --git a/net/minecraft/world/inventory/ResultSlot.java b/net/minecraft/world/inventory/ResultSlot.java
index e4cba45c327d96550a92cd5f9a30b1e5bd212747..2ab50d5d90064e79a13ac57997bc1471e6faac14 100644
--- a/net/minecraft/world/inventory/ResultSlot.java
+++ b/net/minecraft/world/inventory/ResultSlot.java
@@ -14,6 +14,7 @@ public class ResultSlot extends Slot {
     private final CraftingContainer craftSlots;
     private final Player player;
     private int removeCount;
+    public static @org.jetbrains.annotations.Nullable java.util.List<org.bukkit.inventory.ItemStack> craftRemainders; // Paper - Feature: set by CraftEvent when replacing remainders
 
     public ResultSlot(Player player, CraftingContainer craftSlots, Container container, int slot, int xPosition, int yPosition) {
         super(container, slot, xPosition, yPosition);
@@ -91,7 +92,15 @@ public class ResultSlot extends Slot {
             for (int i1 = 0; i1 < craftingInput.width(); i1++) {
                 int i2 = i1 + left + (i + top) * this.craftSlots.getWidth();
                 ItemStack item = this.craftSlots.getItem(i2);
-                ItemStack itemStack = remainingItems.get(i1 + i * craftingInput.width());
+                ItemStack itemStack;
+                // Paper start - Change Remainder
+                org.bukkit.inventory.ItemStack override = craftRemainders.get(i2);
+                if (override != null) {
+                    itemStack = org.bukkit.craftbukkit.inventory.CraftItemStack.unwrap(override);
+                } else {
+                    itemStack = remainingItems.get(i1 + i * craftingInput.width());
+                }
+                // Paper end - Change Remainder
                 if (!item.isEmpty()) {
                     this.craftSlots.removeItem(i2, 1);
                     item = this.craftSlots.getItem(i2);
